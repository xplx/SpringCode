<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1"
	metadata-complete="true">

	<display-name>Archetype Created Web Application</display-name>
	
	<welcome-file-list>
		<welcome-file>/index.do</welcome-file>
	</welcome-file-list>


	<!-- spring框架提供的字符集过滤器 -->
	<!-- spring Web MVC框架提供了org.springframework.web.filter.CharacterEncodingFilter用于解决POST方式造成的中文乱码问题 -->
	<!-- 强制进行转码 -->
	<!--<filter> -->
	<!--<filter-name>sessionFilter</filter-name> -->
	<!--<filter-class>cn.com.tcps.utils.SessionFilter</filter-class> -->
	<!--<init-param> -->
	<!--<param-name>encoding</param-name> -->
	<!--<param-value>UTF-8</param-value> -->
	<!--</init-param> -->
	<!--<init-param> -->
	<!--<param-name>forceEncoding</param-name> -->
	<!--<param-value>true</param-value> -->
	<!--</init-param> -->
	<!--</filter> -->
	<!--<filter-mapping> -->
	<!--<filter-name>sessionFilter</filter-name> -->
	<!--<url-pattern>/*</url-pattern> -->
	<!--<dispatcher>REQUEST</dispatcher> -->
	<!--<dispatcher>FORWARD</dispatcher> -->
	<!--</filter-mapping> -->

	<!-- <filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter> -->
	<!-- <filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<!-- 默认就会找这个文件，不需要额外配置引用 -->
	<context-param>
		<param-name>log4jConfiguration</param-name>
		<param-value>classpath:resources/log4j2.xml</param-value>
	</context-param>

	<!--日志文件配置 -->
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	
	<filter>
		<filter-name>log4jServletFilter</filter-name>
		<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>log4jServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>


	<!-- 默认的spring配置文件是在WEB-INF下的applicationContext.xml,不是必须的 -->
	<!-- <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener> -->

	<!-- 处理由JavaBeans,Introspector的使用而引起的缓冲泄露,建议配置此监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- springMVC的核心控制器 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:resources/spring/spring-*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

	<!-- Hessian配置 -->
	<!-- <servlet> <servlet-name>remote</servlet-name> 使用Spring的代理Servlet <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <init-param> 
		<param-name>contextConfigLocation</param-name> <param-value>classpath:resources/spring/spring-*.xml</param-value> </init-param> <load-on-startup>1</load-on-startup> 
		</servlet> <servlet-mapping> <servlet-name>remote</servlet-name> <url-pattern>/remote/*</url-pattern> </servlet-mapping> -->

	<!--druid ==> 连接池启用 Web 监控统计功能 -->
	<!-- <servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>druidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>/public/*,*.js,*.css,/druid*,*.jsp,*.swf</param-value>
		</init-param>
		<init-param>
			<param-name>principalSessionName</param-name>
			<param-value>sessionInfo</param-value>
		</init-param>
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>druidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
</web-app>
